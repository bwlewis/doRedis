% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/doRedis.R
\name{setReduce}
\alias{setReduce}
\title{Set two-level distributed reduction}
\usage{
setReduce(fun = NULL)
}
\arguments{
\item{fun}{a function of two arguments, set to NULL to disable combining, or
leave missing to implicitly set the gather function formally identical to the
\code{.combine} function but with an empty environment.}
}
\value{
\code{fun} is invisibly returned, or TRUE is returned when
 \code{fun} is missing (in which case the \code{.combine} function is used).
}
\description{
Instruct doRedis to perform the \code{.combine} reduction per task on each
worker before returning results, cf. \code{\link{foreach}}.
Combined results are then processed through
the specified function \code{fun} for two levels of reduction
functions. This option only applies when the \code{chunkSize} option is greater than
one, and automatically sets \code{.multicombine=FALSE}.
}
\details{
This approach can improve performance when the \code{.combine} function is
expensive to compute, and when function emits significantly less data than
it consumes.
}
\note{
This value is overriden by setting the 'reduce' option in the
foreach loop (see the examples).
}
\examples{
\dontrun{
setChunkSize(3)
setReduce(list)
foreach(j=1:10, .combine=c) \%dopar\% j

# Same effect as:

foreach(j=1:10, .combine=c,
        .options.redis=list(chunksize=3, reduce=list)) \%dopar\% j
}
}
\seealso{
\code{\link{foreach}}, \code{\link{setChunkSize}}
}

